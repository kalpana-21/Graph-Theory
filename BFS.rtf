{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import java.io.*;\
import java.util.*;\
\
public class Solution \{\
    \
    \
    public static boolean BFS(List<List<Integer>> g, int s, int d)\{\
        int n=g.size();\
        boolean vis[] = new boolean[n];\
        vis[s]=true;\
        Queue<Integer> q = new LinkedList<>();\
        q.add(s);\
        while(!q.isEmpty())\{\
            int u = q.peek();\
            q.poll();\
            for(int v: g.get(u))\{\
                if(vis[v]==false)\{\
                    vis[v]=true;\
                    q.add(v);\
                \}\
            \}\
        \}\
        return vis[d];\
    \}\
\
    public static void main(String[] args) \{\
            \
            Scanner sc = new Scanner(System.in);\
            int t = sc.nextInt();\
            for(int i=1;i<=t;i++)\{\
                System.out.println("Test Case #"+i+":");\
                int n=sc.nextInt();\
                int m=sc.nextInt();\
                List<List<Integer>> g = new ArrayList<>();\
                for(int p=0;p<=n;p++)\
                    g.add(new ArrayList<>());\
                for(int j=0;j<m;j++)\{\
                    int u =sc.nextInt();\
                    int v =sc.nextInt();\
                    g.get(u).add(v);\
                    g.get(v).add(u);\
                \}\
                int q = sc.nextInt();\
                for(int qu=0;qu<q;qu++)\{\
                    int s = sc.nextInt();\
                    int d = sc.nextInt();\
                    if(BFS(g,s,d) == true)\
                        System.out.println("Yes");\
                    else\
                        System.out.println("No");\
                \}\
\
            \}\
        \
    \}\
\}}